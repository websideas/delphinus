!function(t){function a(){var t=document.createElement("p"),a=!1;if(t.addEventListener)t.addEventListener("DOMAttrModified",function(){a=!0},!1);else{if(!t.attachEvent)return!1;t.attachEvent("onDOMAttrModified",function(){a=!0})}return t.setAttribute("id","target"),a}function e(a,e){if(a){var n=this.data("attr-old-value");if(e.attributeName.indexOf("style")>=0){n.style||(n.style={});var r=e.attributeName.split(".");e.attributeName=r[0],e.oldValue=n.style[r[1]],e.newValue=r[1]+":"+this.prop("style")[t.camelCase(r[1])],n.style[r[1]]=e.newValue}else e.oldValue=n[e.attributeName],e.newValue=this.attr(e.attributeName),n[e.attributeName]=e.newValue;this.data("attr-old-value",n)}}var n=window.MutationObserver||window.WebKitMutationObserver;t.fn.attrchange=function(r,i){if("object"==typeof r){var c={trackValues:!1,callback:t.noop};if("function"==typeof r?c.callback=r:t.extend(c,r),c.trackValues&&this.each(function(a,e){for(var n,r={},a=0,i=e.attributes,c=i.length;c>a;a++)n=i.item(a),r[n.nodeName]=n.value;t(this).data("attr-old-value",r)}),n){var o={subtree:!1,attributes:!0,attributeOldValue:c.trackValues},s=new n(function(a){a.forEach(function(a){var e=a.target;c.trackValues&&(a.newValue=t(e).attr(a.attributeName)),"connected"===t(e).data("attrchange-status")&&c.callback.call(e,a)})});return this.data("attrchange-method","Mutation Observer").data("attrchange-status","connected").data("attrchange-obs",s).each(function(){s.observe(this,o)})}return a()?this.data("attrchange-method","DOMAttrModified").data("attrchange-status","connected").on("DOMAttrModified",function(a){a.originalEvent&&(a=a.originalEvent),a.attributeName=a.attrName,a.oldValue=a.prevValue,"connected"===t(this).data("attrchange-status")&&c.callback.call(this,a)}):"onpropertychange"in document.body?this.data("attrchange-method","propertychange").data("attrchange-status","connected").on("propertychange",function(a){a.attributeName=window.event.propertyName,e.call(t(this),c.trackValues,a),"connected"===t(this).data("attrchange-status")&&c.callback.call(this,a)}):this}return"string"==typeof r&&t.fn.attrchange.hasOwnProperty("extensions")&&t.fn.attrchange.extensions.hasOwnProperty(r)?t.fn.attrchange.extensions[r].call(this,i):void 0}}(jQuery);